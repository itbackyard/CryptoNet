name: "2. Continuous Deployment (Release)"

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-preview[0-9]+"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify commit exists in origin/main
        run: git branch --remote --contains | grep origin/main

      - name: Extract release notes
        run: |
          git log --pretty=format:'%d %s' ${GITHUB_REF} | perl -pe 's| \(.*tag: v(\d+.\d+.\d+(-preview\d+)?)?(, .*?)*\)|\n## \1\n|g' > RELEASE-NOTES

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Set VERSION variable from tag
        run: |
          RAW_VERSION=${GITHUB_REF/refs\/tags\/v/}
          # replace any accidental leading zeros in prerelease numbers
          SANITIZED_VERSION=$(echo $RAW_VERSION | sed -E 's/\.0+([0-9]+)/.\1/g')
          echo "VERSION=$SANITIZED_VERSION" >> $GITHUB_ENV

      - name: Build
        run: dotnet build --configuration Release /p:Version=${VERSION}

      - name: Test
        run: dotnet test --configuration Release /p:Version=${VERSION} --no-build

      - name: Pack
        run: dotnet pack --configuration Release /p:Version=${VERSION} --no-build --output .

      - name: Push
        run: dotnet nuget push CryptoNet.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_TOKEN}
        env:
          NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}
